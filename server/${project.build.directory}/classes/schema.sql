-- Первой создаём таблицу users, так как на неё ссылаются другие таблицы
CREATE TABLE IF NOT EXISTS users
(
    id    INT     NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR NOT NULL,
    email VARCHAR NOT NULL UNIQUE
);

-- Затем создаём requests, так как items ссылается на неё
CREATE TABLE IF NOT EXISTS requests
(
    id           INT     NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description  VARCHAR NOT NULL,
    requestor_id INT     NOT NULL REFERENCES users (id)  -- Добавлен FOREIGN KEY
);

-- Теперь создаём items, так как bookings и comments ссылаются на неё
CREATE TABLE IF NOT EXISTS items
(
    id           INT     NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR NOT NULL,
    description  VARCHAR NOT NULL,
    is_available BOOLEAN NOT NULL,
    owner_id     INT     NOT NULL REFERENCES users (id),
    request_id   INT     REFERENCES requests (id)
);

-- Затем bookings, так как она зависит от users и items
CREATE TABLE IF NOT EXISTS bookings
(
    id         INT                         NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    end_date   TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    item_id    INT                         NOT NULL REFERENCES items (id),
    booker_id  INT                         NOT NULL REFERENCES users (id),
    status     VARCHAR                     NOT NULL
);

-- И наконец comments, которая зависит от users и items
CREATE TABLE IF NOT EXISTS comments
(
    id        INT                         NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text      VARCHAR                     NOT NULL,
    item_id   INT                         NOT NULL REFERENCES items (id),
    author_id INT                         NOT NULL REFERENCES users (id),
    created   TIMESTAMP WITHOUT TIME ZONE NOT NULL
);